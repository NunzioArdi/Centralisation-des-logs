input {
   udp {
      port => 5044
      tags => ["cisco-asa"]
   }
}

filter {
   if "cisco-asa" in [tags] {
      grok {
         match => ["message", "<%{POSINT:syslog_pri}>%{TIMESTAMP_ISO8601:timestamp}: %%{CISCOTAG:ciscotag}: %{GREEDYDATA:cisco_message}"]
         tag_on_failure => ["_grokparsefailure_set_fields"] # Si ce tag apparet, c'est que les logs cisco-asa ne suive pas ce format
      }
      
      if "_grokparsefailure_set_fields" not in [tags] {
         # Extraie les champs de chacun des types de messages
         grok {
            match => [
               "cisco_message", "%{CISCOFW106001}",
               "cisco_message", "%{CISCOFW106006_106007_106010}",
               "cisco_message", "%{CISCOFW106014}",
               "cisco_message", "%{CISCOFW106015}",
               "cisco_message", "%{CISCOFW106021}",
               "cisco_message", "%{CISCOFW106023}",
               "cisco_message", "%{CISCOFW106100}",
               "cisco_message", "%{CISCOFW110002}",
               "cisco_message", "%{CISCOFW302010}",
               "cisco_message", "%{CISCOFW302013_302014_302015_302016}",
               "cisco_message", "%{CISCOFW302020_302021}",
               "cisco_message", "%{CISCOFW305011}",
               "cisco_message", "%{CISCOFW313001_313004_313008}",
               "cisco_message", "%{CISCOFW313005}",
               "cisco_message", "%{CISCOFW402117}",
               "cisco_message", "%{CISCOFW402119}",
               "cisco_message", "%{CISCOFW419001}",
               "cisco_message", "%{CISCOFW419002}",
               "cisco_message", "%{CISCOFW500004}",
               "cisco_message", "%{CISCOFW602303_602304}",
               "cisco_message", "%{CISCOFW710001_710002_710003_710005_710006}",
               "cisco_message", "%{CISCOFW713172}",
               "cisco_message", "%{CISCOFW733100}"
            ]
            add_tag => [ "set_message_fields"] # pour ne pas avoir le tag fail
            tag_on_failure => ["_grokparsefailure_set_message_fields"]
         }

         # Calcule seulement la severity (pas besoin du reste)
         ruby {
            code => 'event.set("syslog_severity", event.get("syslog_pri").to_i.modulo(8))'
            remove_field => "[syslog_pri]"
         }

         # Option les informations de localisation Ã  partir des ip
         geoip {
            add_tag => [ "Whois" ]
            source => "src_ip"
            tag_on_failure => ["_geoip_lookup_failure"]
         }

         #  Analyse la date
         date {
            match => ["timestamp", "ISO8601"]
            remove_field => [ "timestamp" ]
         }
      }
   }
}

output {
   if "cisco-asa" in [tags] {
      elasticsearch {
         manage_template => false
         hosts => ["localhost:9200"]
         ilm_pattern => "000001"
         ilm_rollover_alias => "cisco-asa"
      }
   }
}